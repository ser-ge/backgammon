{"version":3,"sources":["Point.js","Points.js","BearedOff.js","Dice.js","TwoDice.js","Bar.js","Board.js","StartGameButton.js","NewGameButton.js","GameIDForm.js","Player.js","Chat.js","Game.js","LandingPage.js","App.js","index.js"],"names":["Point","getSvgPointStyle","id","className","width","height","transform","fill","bottom","left","zIndex","getSvgCheckersStyle","position","top","overflow","getPointStyle","alignItems","margin","border","backgroundColor","alignSelf","gridRow","value","r","Array","from","Math","abs","keys","map","e","cx","cy","count","stroke","stroke-width","this","props","point","onClick","bind","style","row","xmlns","viewBox","preserveAspectRatio","points","drawCheckers","React","Component","Points","handlePointClick","orient","BearedOff","getCheckerStyle","numChecker","pSign","gridRowStart","bearedOff","checkerNum","Dice","active","faceValue","handleDiceThrow","face","isNaN","String","fontSize","color","dangerouslySetInnerHTML","__html","TwoDice","dice","switchDice","useState","diceState","setDice","firstIsActive","setActiveDice","handleClick","length","useEffect","key","Board","socket","gameId","gameData","send","channel","data","emit","player_sign","room","start","roll","slice","reverse","bar","concat","isP","sections","boardStyle","display","gridTemplateColumns","gridTemplateRowsows","gap","minHeight","StartGameButton","buttonCSS","to","buttonStyle","handleStartGameClick","path","render","Game","NewGameButton","handleNewGameClick","name","setName","linkRef","useRef","elem","document","querySelectorAll","M","Modal","init","dismissable","opacity","href","placeholder","type","class","onChange","target","for","ref","window","location","hostname","current","select","preventDefault","execCommand","toast","html","displayLength","justifyItems","Player","player","turn","connected","preloader","classNmae","Chat","text","isMine","messages","setMessages","newMessage","setNewMessage","on","incomingMessage","console","log","updateMessages","flexDirection","maxHeight","tabindex","dir","message","newGameId","pSignProp","params","match","setGameData","isLoading","setLoaded","chat","showChat","setGameId","setpSign","joinUrl","game_id","undefined","fetch","method","credentials","then","response","json","joinGame","updatedGameData","updateGame","players","opSign","LandingPage","App","getData","setState","state","socketIOClient","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.164c53a0.chunk.js","sourcesContent":["import React from 'react';\n\n\nexport default class Point  extends React.Component {\n\n   \n\n    drawCheckers(value,id) {\n\n        const height = 100\n        const width = 100\n        const r = id == 0 || id == 25 ? \"9.5vw\" : 30\n      \n\n        function offset(count) {\n            return (\n                (count+0.5)*r*2 +2\n            )\n        }\n\n        const checkers = Array.from(Array(Math.abs(value)).keys());\n        // console.log(checkers);\n        return (checkers.map((e) => {\n            return (\n\n            <circle \n            cx= {width/2+\"%\"} \n            cy={height - offset(e) + \"%\"} \n            r={r} \n            stroke=\"grey\" \n            stroke-width= {id == 0 || id == 25 ? 10 : 2} \n            fill={value > 0 ? 'ivory' : 'black'}/>\n                \n            )\n\n        })\n\n        )};  \n  \n    getSvgPointStyle = (id) => {\n        return {\n        className : \"svg-triangle\",\n        \n        width :  \"100%\",\n        height : \"100%\",\n        transform : (id > 12 ? \"scale(1,1)\" : 'scale(1,-1)') , \n        fill : id % 2 == 0 ? 'ivory' : 'black',\n        // display : \"block\",\n        // position : \"absolute\",\n        bottom : \"0%\",\n        left : \"25%\",\n        zIndex : \"3\"\n        \n\n\n        }\n    }\n\n    getSvgCheckersStyle = (id) => {\n      if (id == 0 || id == 25) {\n        return(\n          {\n        position:\"absolute\",\n        // transform : 'scale(1,-1)',\n        width :  \"100%\",\n        height : \"50%\",\n        top : \"0%\",\n        left : \"0%\",\n        overflow: \"visible\",\n        zIndex : \"10\"} )\n          }else{\n            return ( {\n              position:\"absolute\",\n              transform : (id > 12 ? \"scale(1,1)\" : 'scale(1,-1)'),\n              width :  \"100%\",\n              height : \"200%\",\n              top : (id > 12 ? \"-100%\" : '0%'),\n              left : \"0%\",\n              zIndex : \"10\"})\n          }\n\n      }\n    \n\n\n\n    getPointStyle = (id) => {\n      if (id == 0 || id == 25) {\n        return {\n\n          className : \"point\",\n          // display : \"grid\",\n          alignItems: \"space-around\",\n          margin: \"none\",\n          border: \"none\",\n          backgroundColor: \"inherit\",\n          height: \"100%\",\n          width: \"100%\",\n          position: \"relative\",\n          alignSelf: \"centre\"\n        }\n      } else {\n        return {\n\n          className : \"point\",\n          gridRow : id < 13 ? \"1\" : \"3\",\n          // display : \"grid\",\n          alignItems: \"centre\",\n          margin: \"none\",\n          border: \"none\",\n          backgroundColor: \"inherit\",\n          height: \"100%\",\n          width: \"100%\",\n          position: \"relative\"\n        }\n      }\n\n    };\n\n\n    render() {\n\n    const {value, id} = this.props.point;\n    const height = 300\n    const width = 50\n    const r = 20\n\n   \n    return (\n\n      <button \n      onClick={this.props.onClick.bind(this,id)}\n      width={\"100%\"}\n      style={this.getPointStyle(id)}\n      >\n       {this.props.row != 'bar' && <svg xmlns={\"http://www.w3.org/2000/svg\"} viewBox={\"0 0 100 100\"} preserveAspectRatio={\"none\"} style={this.getSvgPointStyle(id)} >\n        <polygon points=\"50,0 90,100 10,100\" />\n    </svg> }\n        <svg xmlns={\"http://www.w3.org/2000/svg\"} viewBox={\"0 0 100 100\"} preserveAspectRatio=\"xMaxYMax\" style={this.getSvgCheckersStyle(id)}>\n        {this.drawCheckers(value,id)}\n        </svg>\n      </button>\n\n    );\n  }\n}\n\n\n\n\n// renderSquares(number,half,i) {\n\n//     const orient = half == 1 ? \"scale(1,-1)\" : \"scale(1,1)\"\n//     const id = i + 1 - (1-half)*12 // Hacky redo!!!\n//     console.log(id)\n//     return ( <Square\n//         id={id} \n//         onClick={() => this.handleClick(id)} \n//         orient={orient}\n//         color={number < 0 ? 'black' : 'white'} \n//         />\n//         );\n//   }","import React from 'react';\nimport Point from './Point'\n\nexport default class Points extends React.Component {\n    \n  \n    render() {\n      return this.props.points.map((point) => (\n        <Point point={point} onClick={this.props.handlePointClick} row={this.props.row} orient={this.props.orient}/>\n\n      ));\n    }\n}\n\n","import React, { Component } from 'react';\n\nclass BearedOff extends Component {\n    \n    getCheckerStyle = (numChecker, pSign) => (\n        {gridRowStart : pSign === 1 ? 15 - numChecker : \"\" ,\n        backgroundColor: pSign === -1 ? \"black\" : \"ivory\"}\n\n    )\n    render() {\n   \n        return ( \n         <div className=\"beared-off\">\n      \n             <div className=\"beared-off-section top\">\n          \n            {[...Array(this.props.bearedOff[\"-1\"]).keys()].map( (checkerNum) => (\n                <div className=\"beared-checker\" style={this.getCheckerStyle(checkerNum, -1)}></div> \n            )\n\n            )}\n            </div>\n\n            <div className=\"beared-off-section bottom\">\n\n\n                     {[...Array(this.props.bearedOff[\"1\"]).keys()].map( (checkerNum) => (\n                <div className=\"beared-checker\" style={this.getCheckerStyle(checkerNum, 1)} ></div> \n            )\n\n            )} \n            \n            \n            </div>\n      \n       </div> \n         );\n    }\n}\n \nexport default BearedOff;","import React from 'react';\n\nexport default function Dice({ active, faceValue, handleDiceThrow }) {\n\n\n  const faceHex = isNaN(faceValue)\n    ? \"25a2\"\n    : String(2680 + faceValue - 1);\n\n  const face = \"&#x\" + faceHex + \";\";\n\n  const getDiceStyle = () => {\n\n    return ({\n      fontSize: active ? \"6em\" : \"5em\",\n      color: \"black\",\n      height: \"20%\",\n    })\n\n  };\n\n  return (\n    <span\n      onClick={handleDiceThrow}\n      className=\"diceFace\"\n      style={getDiceStyle()}\n      dangerouslySetInnerHTML={{ __html: `${face}` }}\n    ></span>\n  );\n}\n\n","import React, { useEffect, useState } from 'react';\nimport Dice from './Dice'\n\n// export default class TwoDice extends React.Component {\n\n//   shouldComponentUpdate(nextProps){\n\n    \n//     return isNaN(nextProps.dice[1]) == false ;\n//   }\n\n//     render() {\n        \n//       return (\n//         <div className=\"dice\">\n             \n//         <Dice key={0} faceValue={this.props.dice[0]} handleDiceThrow={this.props.handleDiceThrow} />\n//         <Dice key={1} faceValue={this.props.dice[1]} handleDiceThrow={this.props.handleDiceThrow} /> \n//         </div>\n//       );\n//     }\n//   }\n\nexport default function TwoDice({dice,  switchDice,  handleDiceThrow}) {\n\n  const [diceState, setDice] = useState([6,6]);\n  const [firstIsActive, setActiveDice] = useState(true)\n\n\n  const handleClick = () => {\n    if (dice.length != 0) {\n\n      switchDice()\n\n    } else {\n      handleDiceThrow()\n    }\n  }\n\n  useEffect(()=>{\n  \n  if (dice.length > 1) {\n    setDice(dice)\n  }\n\n  if (dice.length === 1) {\n    setActiveDice(!firstIsActive)\n  }\n\n\n\n  },[dice])\n\n  \n  \n  return (\n    <div className=\"dice\">\n         \n    <Dice key={0} active={!firstIsActive} faceValue={diceState[0]} handleDiceThrow={handleClick} />\n    <Dice key={1} active={firstIsActive} faceValue={diceState[1]} handleDiceThrow={handleClick} /> \n    </div>\n  );\n\n}","import React from 'react';\n\n\nexport default class Bar  extends React.Component {\n\n   \n\n    drawCheckers(value) {\n\n        const height = 100\n        const width = 100\n        const r = 30\n      \n\n        function offset(count) {\n            return (\n                (count+0.5)*r*2 +2\n            )\n        }\n\n        const checkers = Array.from(Array(Math.abs(value)).keys());\n        // console.log(checkers);\n        return (checkers.map((e) => {\n            return (\n\n            <circle \n            cx={width/2+\"%\"} \n            cy={height - offset(e) + \"%\"} \n            r={r + \"%\"} \n            stroke=\"grey\" \n            stroke-width=\"2\" \n            fill={value > 0 ? 'ivory' : 'black'}/>\n                \n            )\n\n        })\n\n        )};  \n  \n    getSvgPointStyle = (id) => {\n        return {\n        className : \"svg-triangle\",\n        \n        width :  \"100%\",\n        height : \"100%\",\n        transform : (id > 12 ? \"scale(1,1)\" : 'scale(1,-1)') , \n        fill : id % 2 == 0 ? 'ivory' : 'black',\n        // display : \"block\",\n        // position : \"absolute\",\n        bottom : \"0%\",\n        left : \"25%\",\n        zIndex : \"2\"\n        \n\n\n        }\n    }\n\n    getSvgCheckersStyle = (id) => {\n      return {\n        position:\"absolute\",\n        transform : (id > 12 ? \"scale(1,1)\" : 'scale(1,-1)'),\n        width :  \"100%\",\n        height : \"100%\",\n        top : \"0%\",\n        left : \"0%\",\n        zIndex : \"10\"\n\n      }\n    }\n\n    getPointStyle = (id) => {\n      return {\n        className : \"point\",\n        gridRow : id < 13 ? \"1\" : \"3\",\n        // display : \"grid\",\n        alignItems: \"centre\",\n        margin: \"none\",\n        border: \"none\",\n        backgroundColor: \"inherit\",\n        height: \"100%\",\n        width: \"100%\",\n        position: \"relative\"\n      }\n\n    }\n\n\n    render() {\n\n    const {value, id} = this.props.point;\n    const height = 300\n    const width = 50\n    const r = 20\n\n   \n    return (\n\n      <button \n      onClick={this.props.onClick.bind(this,id)}\n      width={\"100%\"}\n      style={this.getPointStyle(id)}\n      >\n        <svg xmlns={\"http://www.w3.org/2000/svg\"} viewBox={\"0 0 100 100\"} preserveAspectRatio={\"none\"} style={this.getSvgPointStyle(id)} >\n        <polygon points=\"50,0 90,100 10,100\" />\n        </svg> \n        <svg xmlns={\"http://www.w3.org/2000/svg\"} viewBox={\"0 0 100 100\"} preserveAspectRatio=\"xMaxYMax\" style={this.getSvgCheckersStyle(id)}>\n        {this.drawCheckers(value)}\n        </svg>\n      </button>\n\n    );\n  }\n}\n\n\n\n\n// renderSquares(number,half,i) {\n\n//     const orient = half == 1 ? \"scale(1,-1)\" : \"scale(1,1)\"\n//     const id = i + 1 - (1-half)*12 // Hacky redo!!!\n//     console.log(id)\n//     return ( <Square\n//         id={id} \n//         onClick={() => this.handleClick(id)} \n//         orient={orient}\n//         color={number < 0 ? 'black' : 'white'} \n//         />\n//         );\n//   }","import React, {useState, useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport Points from \"./Points\";\nimport BearedOff from \"./BearedOff\";\nimport TwoDice from \"./TwoDice\";\nimport BarPoints from \"./Bar\";\n\nexport default function Board ({socket,pSign, gameId, gameData, switchDice }) {\n \n  // const [gameData, setGameData] = useState(gameData)\n  // const [gameData, setGameData] = useState({\n  //   points: [],\n  //   dice: [,],\n  //   move: [],\n  //   moves: [],\n  //   activeDice: 0,\n  //   bearedOff: { \"1\": [], \"-1\": [] },\n  // })\n\n  const [activeDice, setActiveDice] = useState(0)\n\n\n  const send = (channel, data) => {\n    socket.emit(channel, { ...data, player_sign: pSign, room: gameId });\n  };\n\n  const handlePointClick = (id) => {\n    send(\"move\", {\n      start: id,\n      roll: gameData.dice[0],\n    });\n  };\n\n  const handleDiceThrow = () => {\n    send(\"roll_dice\");\n  };\n\n\n\n  // useEffect(() => {socket.on(\"game_data\", (newGameData) => setGameData({...newGameData}))},[]);\n\n\n\n\n  let top = gameData.points.slice(1, 13).reverse();\n\n  let bottom = gameData.points.slice(13, 25)\n\n  let bar = gameData.points.slice(0, 1).concat(gameData.points.slice(-1))\n\n  const isP = pSign == 1 \n\n  const sections = {\n    top : isP ? top : bottom,\n    bottom : isP ? bottom : top,\n    bar : isP ? bar : bar.reverse()\n  } \n\n\n  // const { points } = gameData;\n\n  return (\n    <div className=\"board\" style={boardStyle}>\n      <div className=\"game-back-board z-depth-4\">\n        <div className=\"centre-board\">\n          <Points\n            row={\"points-top\"}\n            points={sections.top}\n            handlePointClick={handlePointClick}\n            orient={\"down\"}\n          />\n\n          <TwoDice\n            dice={gameData.dice}\n            handleDiceThrow={handleDiceThrow}\n            switchDice={switchDice}\n          />\n\n          <Points\n            row={\"points-bottom\"}\n            points={sections.bottom}\n            handlePointClick={handlePointClick}\n            orient={\"up\"}\n          />\n\n          <div className=\"bar centre\">\n            <div className=\"bar-gap\">\n              <Points\n                points={sections.bar}\n                handlePointClick={handlePointClick}\n                row={\"bar\"}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <BearedOff bearedOff={gameData.bearedOff} />\n    </div>\n    );\n  }\n\n\nvar boardStyle = {\n  display: \"grid\",\n  gridTemplateColumns: \"1fr 0.1fr\",\n  gridTemplateRowsows: \"1fr\",\n  gap: \"10px\",\n  minHeight: \"60vh\",\n  // minWidth: \"60vw\"\n};\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\nimport Game from \"./Game\";\n\nexport default class StartGameButton extends React.Component {\n\n  render() {\n    return (\n      <Fragment>\n        <Link\n          className={buttonCSS}\n          to={`/game/${this.props.id}`}\n          style={buttonStyle}\n          onClick={() => this.props.handleStartGameClick()}\n        >\n          Start Game\n        </Link>\n        <Route\n          path=\"/game/:game_id\"\n          render={(props) => <Game {...props} socket={this.props.socket} />}\n        />{\" \"}\n      </Fragment>\n    );\n  }\n}\n\nvar buttonCSS =\n  \"modal-action modal-close waves-effect waves-light btn deep-orange darken-4 left-align\";\n\nvar buttonStyle = {\n  fontSize: \"1vw\",\n};\n\n{\n  /* <i class={\"material-icons small left left hide-on-small-only\"}> */\n}\n","import React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport { BrowserRouter as Route, Link } from \"react-router-dom\";\nimport StartGameButton from \"./StartGameButton\";\nimport M from \"materialize-css\";\n// import \"materialize-css/dist/css/materialize.min.css\";\n\nexport default function NewGameButton({ socket, gameId , handleNewGameClick}) {\n  const [name, setName] = useState(\"Player 1\");\n\n  const linkRef = useRef(null);\n\n  const copyToClipboard = (e) => {\n    linkRef.current.select();\n    e.preventDefault();\n    document.execCommand(\"copy\");\n\n    M.toast({ html: \"Link Copied\", displayLength: 500 });\n  };\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n\n\n  const handleStartGameClick = () => {\n    const data = { username: \"example\" };\n\n    // socket.emit(\"register_player\", { room: gameId, name: name });\n    // console.log(\"registered player \" + name);\n  };\n\n  useEffect(() => {\n    let elem = document.querySelectorAll(\".modal\");\n\n    const options = { dismissable: false, opacity: 0 };\n\n    M.Modal.init(elem, options);\n  }, []);\n\n  return (\n    <Fragment>\n      <a\n        className={buttonCSS}\n        style={buttonStyle}\n        onClick={() => handleNewGameClick()}\n        href=\"#modal1\"\n      >\n        New Game\n      </a>\n\n      <div id=\"modal1\" className=\"modal\">\n        <div className=\"modal-content\">\n          <div className=\"input-field col s12\">\n            <input\n              placeholder=\"Player 1\"\n              id=\"name\"\n              type=\"text\"\n              class=\"validate\"\n              value={name}\n              onChange={handleNameChange}\n            />\n            <label for=\"name\">Enter Name:</label>\n          </div>\n\n          <div className=\"row\">\n            <form className=\"col s12\">\n              <div className=\"row\">\n                <div className=\"input-field col s8\">\n                  <i className=\"material-icons prefix\">link</i>\n                  <textarea\n                    id=\"game-link\"\n                    className=\"materialize-textarea\"\n                    ref={linkRef}\n                    value={window.location.hostname + \"/game/\" + gameId}\n                  />\n                  <label for=\"game-link\">Share this link with opponent:</label>\n                </div>\n                <div className=\"input-field col s4\">\n                  <button\n                    onClick={copyToClipboard}\n                    className=\"waves-effect waves-light btn-small  \"\n                  >\n                    Copy Link\n                  </button>{\" \"}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"modal-footer\">\n          <StartGameButton\n            handleStartGameClick={handleStartGameClick}\n            socket={socket}\n            id={gameId}\n          />\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nvar buttonCSS =\n  \"waves-effect waves-light btn-small deep-orange darken-4 left-align modal-trigger\";\n\nvar buttonStyle = {\n  fontSize: \"1vw\",\n};\n","import React from 'react';\n\nexport default class GameIDForm extends React.Component {\n\n    render() {\n        return (\n        <form className={\"sdbutton\"} style={style} onSubmit={this.props.handleSubmit}>\n            <label>\n            Game ID:\n            <input type=\"text\" value={this.props.value} onChange={this.props.handleChange} />\n            </label>\n            <input type=\"submit\" value=\"Join Game\" />\n        </form>\n        );\n    }\n    }\n\n    var style = {\n        display : \"grid\",\n        alignItems : \"centre\",\n        justifyItems: \"centre\",\n      }","import React, { Component, Fragment } from \"react\";\n\n// class Player extends Component {\n//   // state = { name: \"Player 1\", connected: false };\n\n//   getPlayerCardStyle = (player) => {\n//     return {\n//       gridArea: \"player\",\n//     };\n//   };\n\n//   // getData = (gameData) => {\n//   //   console.log(gameData);\n//   //   this.setState({ ...gameData[this.props.pSign] });\n//   // };\n\n//   // componentDidMount() {\n//   //   const { socket, pSign, gameId } = this.props;\n//   //   console.log(\"player mount --------- player data request sent\");\n//   //   // socket.emit(\"player_data\", gameId);\n//   //   socket.on(\"player_data\", this.getData);\n//   // }\n\n//   render() {\n//     console.log(this.props)\n//     const { connected, name } = this.props.player;\n//     let { turn, pSign } = this.props;\n//     let isTurn = turn == pSign ? true : false;\n\n//     const connectedStyle = connected\n//       ? \"col s4 offset-col-s4 orange-text text-lighten-2 \"\n//       : \" col s4 s4 offset-col-s4 grey-text text-lighten-1 \";\n\n//     return (\n//       // <div className=\"card amber lighten-5\">\n//       //   <div className=\"card-stacked\">\n//       //     <div className=\"card-content\">\n//       //       <span >\n//       //         {\" \"}\n//       //         {name}\n//       //       </span>\n//       //     </div>\n//       //     <div className=\"card-action\">\n//       //       <span className={connectedStyle}>\n//       //         {connected ? <span className={isTurn ? \"light-green-text text-darken-1\" : \"grey-text\"}>turn</span> : \"waiting for player\"}{\" \"}\n//       //       </span>\n\n//       //     </div>\n//       //     {!connected && <div className=\"progress\"><div className=\"indeterminate\"></div></div>}\n//       //   </div>\n//       // </div>\n//       <Fragment>\n//       <div className={\" amber lighten-5 row\"} style={styleContainer}>\n//         <div className={\"col s3\"}>\n//           {name}\n          \n//         </div>\n//         <div className={connectedStyle}>\n//             {connected ? (\n//               <span\n//                 className={\n//                   isTurn ? \"light-green-text text-darken-1\" : \"grey-text\"\n//                 }\n//               >\n//                  turn\n//               </span>\n//             ) : (\n//               \"waiting for player\"\n//             )}{\" \"}\n//           </div>\n//       </div>\n//     <div className={\"row\"}>  {!connected && <div className=\"progress\"><div className=\"indeterminate\"></div></div>} </div>\n//     </Fragment>\n//     );\n//   }\n// }\n\n\n// var styleContainer = {\n//   padding: \"0.75rem 0.75rem\",\n//   marginBottom: \"0\",\n// }\n\n\nfunction Player ({pSign, player, turn}) {\n\n  const {connected, name} = {connected: true, name:\"Player 2\"}\n\n  const getPlayerStyle = () => {\n    return  \"btn-flat deep-orange lighten-4 col\"\n  }\n\n  const preloader =   \n  <div classNmae=\"progress\" >\n      <div class=\"indeterminate\"></div>\n  </div>\n\n  return (\n    <Fragment>\n      <div className={\"col s3\"}>\n      <div className={getPlayerStyle()}> {connected ? name : \"connecting.. \" }</div>\n      {!connected && preloader}\n      </div>\n    </Fragment>\n  )\n}\n\n\n\nexport default Player;\n\n\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport \"./chat.css\";\n\nexport default function Chat({ socket, gameId, pSign }) {\n  const [messages, setMessages] = useState([\n      {text: \"hi\", isMine: false},\n      {text: \"Hello\", isMine: true}\n  ]);\n\n  const [newMessage, setNewMessage] = useState('')\n\n\n  const handleNewMessageChange = (e) => {\n      e.preventDefault()\n\n      setNewMessage(e.target.value)\n  }\n\n  const sendMessage = () => {\n    let message = {text: newMessage, pSign: pSign, gameId:gameId}\n    socket.emit(\"message\",message)\n    console.log(message)\n\n    setNewMessage(\"\")\n  }\n\n\n  const updateMessages = (incomingMessage, pSign) =>{\n\n    console.log(pSign)\n    setMessages(messages => [...messages, incomingMessage ])\n  }\n\n  useEffect(()=>{\n      socket.on(\"message\", (incomingMessage)=> updateMessages(incomingMessage))\n  },[])\n\n  return (\n    <Fragment>\n      <div class=\"chat\">\n        <div class=\"messages\">\n          <div class=\"messages-content mCustomScrollbar _mCS_1 mCS_no_scrollbar\" style={{ overflow:\"auto\", display:\"flex\", flexDirection:\"column-reverse\"}}>\n            <div\n              id=\"mCSB_1\"\n              class=\"mCustomScrollBox mCS-light mCSB_vertical mCSB_inside\"\n              style={{ maxHeight: \"none\"}}\n              tabindex=\"0\"\n            >\n              <div\n                id=\"mCSB_1_container\"\n                class=\"mCSB_container mCS_y_hidden mCS_no_scrollbar_y\"\n                style={{ position: \"relative\", top: \"0\", left: \"0\", overflow:\"auto\" , height: \"100%\"}}\n                dir=\"ltr\"\n              >\n\n                {messages.map((message) => (\n                     <div className={message.pSign == pSign ? \"message message-personal new\" : \"message new\"}>\n                     {message.text}\n                   </div>\n                ))}\n\n              </div>\n             \n            </div>\n          </div>\n        </div>\n\n        <div class=\"message-box\">\n          <textarea\n            type=\"text\"\n            class=\"message-input\"\n            placeholder=\"Type message...\"\n            value={newMessage}\n            onChange={handleNewMessageChange}\n          ></textarea>\n          <button type=\"submit\" class=\"message-submit\" onClick={sendMessage}>\n            Send\n          </button>\n        </div>\n      </div>\n      <div class=\"bg\"></div>\n    </Fragment>\n  );\n}\n","import Board from \"./Board\";\nimport React, { useState, useEffect, Component, Fragment } from \"react\";\nimport NewGameButton from \"./NewGameButton\";\nimport GameIDForm from \"./GameIDForm\";\nimport Player from \"./Player\";\nimport Chat from \"./Chat\";\n\nexport default function Game({\n  newGameId,\n  pSignProp,\n  socket,\n  match: { params },\n  handleNewGameClick,\n}) {\n  const [gameData, setGameData] = useState({\n    // pSign: pSignProp,\n    // dice: [],\n    // doubleDiceOwner: [],\n    // winner: [],\n    // gameId: newGameId,\n    // points: [],\n    // bearedOff: { 1: 1, \"-1\": 1 },\n    // score: [],\n    // gamePoints: [],\n    // players: {\n    //   \"1\": {\n    //     connected: false,\n    //     name: \"Player 1\",\n    //     connected: false,\n    //     sign: 1,\n    //   },\n    //   \"-1\": {\n    //     connected: false,\n    //     name: \"Player 2\",\n    //     connected: false,\n    //     sign: -1,\n    //   },\n    // },\n    // turn: 1,\n  });\n\n  const [isLoading, setLoaded] = useState(true);\n  const [chat, showChat] = useState(true);\n  const [gameId, setGameId] = useState(newGameId);\n  const [pSign, setpSign] = useState(pSignProp);\n\n  const joinUrl = \"/api/join_game?game_id=\" + params.game_id;\n  console.log(joinUrl);\n\n  const joinGame = (data) => {\n    console.log(\"Fetching Data\");\n    console.log(data);\n    setGameData({ ...gameData, ...data });\n    setpSign(data.pSign);\n    setGameId(data.gameId);\n  };\n  const resumeGame = () => {\n    socket.emit(\"game_data\");\n  };\n\n  const switchDice = () => {\n    setGameData({ ...gameData, dice: gameData.dice.reverse() });\n  };\n\n  const updateGame = (updatedGameData) => {\n    setGameData({ ...gameData, ...updatedGameData });\n\n    setLoaded(false);\n  };\n  useEffect(() => {\n    const { gameId } = gameData;\n\n    if (newGameId === undefined) {\n      fetch(joinUrl, { method: \"GET\", credentials: \"include\" })\n        .then((response) => response.json())\n        .then((data) => joinGame(data))\n        .then(() => setLoaded(false));\n    }\n\n    socket.emit(\"join\", { gameId: params.game_id });\n    socket.on(\"game_data\", (updatedGameData) => updateGame(updatedGameData));\n  }, []);\n\n  const { players, opSign, turn } = gameData;\n\n  if (isLoading) {\n    return (\n      <div className=\"preloader-wrapper active\">\n        <div className=\"spinner-layer spinner-red-only\">\n          <div className=\"circle-clipper left\">\n            <div className=\"circle\"></div>\n          </div>\n          <div className=\"gap-patch\">\n            <div className=\"circle\"></div>\n          </div>\n          <div className=\"circle-clipper right\">\n            <div className=\"circle\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <Fragment>\n        <div className={\"row\"} style={{ height: \"10vh\" }}></div>\n        <div className={chat ? \"col s9\" : \"col s12\"}>\n     \n          <div className={\"row\"}>\n              <Player\n            socket={socket}\n            turn={turn}\n            pSign={pSign}\n            gameId={params.game_id}\n            player={players[\"-1\"]}\n          />\n          </div>\n          <div className={\"row\"}>\n            <Board\n              gameId={params.game_id}\n              pSign={pSign}\n              socket={socket}\n              gameData={gameData}\n              switchDice={switchDice}\n            />\n          </div>\n          <div className={\"row\"}>\n            {/* <div className={\"col s3\"}>        <Player\n              socket={socket}\n              turn={turn}\n              pSign={pSign * -1}\n              gameId={params.game_id}\n              player={players[\"1\"]}\n            /></div> */}\n            <button className={\"btn-flat deep-orange lighten-4 col s2\"}>Player 1</button>\n            <button className={\"btn deep-orange waves-effect waves-light  lighten-2 col s2 offset-s5\"}>Resign</button>\n            <button\n              className={\"btn deep-orange waves-effect waves-light  lighten-2 col s2 offset-s1\"}\n              onClick={() => showChat(!chat)}\n            >\n              Chat\n              <i class=\"material-icons right\">\n                {chat ? \"keyboard_arrow_right\" : \"keyboard_arrow_left\"}\n              </i>\n            </button>\n            {/* <button className={\"btn col s3\"} onClick={click}></button> */}\n          </div>\n        </div>\n        {chat && (\n          <div className={\"col s3\"}>\n            <Chat socket={socket} gameId={params.game_id} pSign={pSign} />{\" \"}\n          </div>\n        )}\n        {/* <div className=\"row col s12\">\n          <NewGameButton\n            socket={socket}\n            gameId={params.game_id}\n            handleNewGameClick={handleNewGameClick}\n          />\n        </div> */}\n      </Fragment>\n    );\n  }\n}\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport NewGameButton from \"./NewGameButton\";\n// import StartGameModal from './StartGameModal'\nimport StartGameButton from \"./StartGameButton\";\n\nexport default function LandingPage({ socket, id , handleNewGameClick }) {\n  const [gameId, setGameId] = useState(\"\");\n\n//   useEffect(() => {\n//     setGameId(id);\n//   }, [id]);\n\n  return (\n    <Fragment>\n      <NewGameButton socket={socket} gameId={id} handleNewGameClick={handleNewGameClick} />\n     \n    </Fragment>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Game from \"./Game\";\nimport NewGameButton from \"./NewGameButton\";\nimport StartGameButton from \"./StartGameButton\";\nimport LandingPage from './LandingPage'\nimport socketIOClient from \"socket.io-client\";\n\nlet endPoint = \"http://localhost:5000\";\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      socket : socketIOClient(endPoint),\n    };\n  }\n\n  getData = (gameData) => {\n    console.log(gameData);\n    this.setState({ ...gameData });\n  };\n\n  componentDidMount() {\n    console.log(\"mount_run\");\n    this.state.socket.on(\"join\", this.getData);}\n\n  handleNewGameClick = () => {\n      // socket.emit(\"create\");\n  \n      fetch(\"/api/new_game\", {method: 'GET', credentials: 'include' })\n        .then((response) => response.json())\n        .then((data) => this.getData(data));\n    };\n\n  render() {\n    const {socket} = this.state\n    return (\n      <Router>\n\n        <div className=\"row\">\n          \n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <LandingPage {...props} socket={socket} id={this.state.gameId} handleNewGameClick={this.handleNewGameClick}/>\n              )}\n            />\n            <Route\n              path=\"/game/:game_id\"\n              render={(props) => <Game {...props} socket={socket} newGameId={this.state.gameId} pSignProp={this.state.pSign} handleNewGameClick={this.handleNewGameClick}/>}\n            />\n          </Switch>\n \n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <div className='container valign-wrapper'>\n        <App />\n    </div>\n  ,\n      document.getElementById('root')\n    ); "],"sourceRoot":""}